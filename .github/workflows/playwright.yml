name: E2E (Playwright)

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write   # PRコメント投稿に必要

# Pages 競合回避
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    name: Run E2E on ${{ matrix.project }}
    runs-on: ubuntu-latest
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
      max-parallel: 3

    env:
      CI: true
      NEXT_PUBLIC_BASE_URL: "http://127.0.0.1:3100"
      PW_BASE_URL: "http://127.0.0.1:3100"
      E2E_STRIPE_MOCK: "1"
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
      DATABASE_URL: "file:./prisma/dev.db"   # ✅ SQLite DB ファイル

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      # ✅ DBファイルを作成（スキーマ反映）
      - name: Prepare SQLite (prisma db push)
        run: |
          mkdir -p prisma
          npx prisma db push --skip-generate

      - name: Build Next.js
        run: npm run build

      # ✅ ビルド成果物を事前確認
      - name: Verify Next.js build output
        run: |
          echo "BASE_URL=$NEXT_PUBLIC_BASE_URL"
          if [ ! -d ".next" ]; then
            echo "::error::.next directory not found. Did 'npm run build' succeed?"
            exit 1
          fi
          ls -la .next || true
          if [ -f ".next/BUILD_ID" ]; then
            echo "BUILD_ID: $(cat .next/BUILD_ID)"
          else
            echo "::warning::.next/BUILD_ID not found (acceptable on some Next versions)."
          fi

      - name: Install Playwright browsers & deps
        run: npx playwright install --with-deps

      # --- 軽量実行（デバッグ無効） ---
      - name: Run tests (fast) ${{ matrix.project }}
        run: >
          npx playwright test
          --project="${{ matrix.project }}"
          --workers=1
          --reporter=list,junit,blob
        env:
          E2E_DEBUG: "0"

      # --- 失敗時に詳細リトライ ---
      - name: Retry with debug trace ${{ matrix.project }}
        if: failure()
        run: >
          npx playwright test
          --project="${{ matrix.project }}"
          --workers=1
          --retries=1
          --reporter=list,junit,blob
        env:
          E2E_DEBUG: "2"

      # ▶ アーティファクト（無ければ WARN にして後段を生かす）
      - name: Upload blob report (per-project)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: blob-${{ matrix.project }}
          path: blob-report
          if-no-files-found: warn
          retention-days: 7

      - name: Upload JUnit XML (per-project)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.project }}
          path: junit.xml
          if-no-files-found: warn
          retention-days: 30

  publish:
    name: Publish dev portal & HTML report to GitHub Pages
    needs: [test]
    runs-on: ubuntu-latest
    if: ${{ always() }}   # 常に起動 → 後段条件で制御
    timeout-minutes: 20

    # ← ジョブレベルの environment は付けない（PRで保護に引っかかるため）

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps (for merge tool)
        run: npm ci

      - name: Download all blob reports
        uses: actions/download-artifact@v4
        with:
          pattern: blob-*
          path: ./test-results/blobs
          merge-multiple: true

      # ✅ blob が 1つも無ければ HTML マージも Pages もスキップ
      - name: Check if any blob reports exist
        id: check_blobs
        run: |
          shopt -s nullglob
          files=( ./test-results/blobs/**/metadata.json ./test-results/blobs/**/blob-report/* )
          if [ ${#files[@]} -gt 0 ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
            echo "Found ${#files[@]} report files."
          else
            echo "::warning:: No blob reports found; skipping HTML merge & Pages deploy."
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Merge to single HTML report
        if: steps.check_blobs.outputs.found == 'true'
        run: npx playwright merge-reports --reporter html ./test-results/blobs

      # === 開発ポータルの生成（README へのリンク＋最新レポート導線）
      - name: Build Dev Portal (index.html)
        run: |
          mkdir -p site
          cat > site/index.html <<'HTML'
          <!doctype html>
          <html lang="ja">
          <head>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width,initial-scale=1" />
            <title>auto-loop-demo-e2e – 開発ポータル</title>
            <style>
              body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans JP", sans-serif; margin: 0; padding: 24px; line-height: 1.6; color: #111; }
              header { border-bottom: 1px solid #e5e7eb; margin-bottom: 20px; }
              h1 { font-size: 28px; margin: 0 0 8px; }
              .cards { display: grid; grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); gap: 16px; }
              .card { border: 1px solid #e5e7eb; border-radius: 12px; padding: 16px; background: #fff; }
              .muted { color: #6b7280; }
              a.button { display:inline-block; padding:10px 14px; border-radius:8px; text-decoration:none; border:1px solid #d1d5db; }
              code { background:#f3f4f6; padding:2px 6px; border-radius:6px; }
              footer { margin-top: 40px; color:#6b7280; font-size: 12px; }
            </style>
          </head>
          <body>
            <header>
              <h1>予約システム E2E – 開発ポータル</h1>
              <p class="muted">Next.js + Playwright / CI / Stripe モック / レポート公開</p>
            </header>

            <section class="cards">
              <div class="card">
                <h3>ドキュメント（README）</h3>
                <p>プロジェクトの全体像・開発ルールは README を参照。</p>
                <p><a class="button" href="https://github.com/${{ github.repository }}/blob/main/README.md" target="_blank" rel="noopener">Open README on GitHub ↗</a></p>
              </div>

              <div class="card">
                <h3>最新の E2E レポート</h3>
                <p>GitHub Actions の実行結果（HTML Report）。</p>
                <p><a class="button" href="./report/index.html">Open Playwright Report</a></p>
              </div>

              <div class="card">
                <h3>ローカル手順（抜粋）</h3>
                <p><code>npm ci</code> → <code>npm run dev</code> → <code>npx playwright test</code></p>
                <p class="muted">より詳細は README を参照してください。</p>
              </div>
            </section>

            <footer>© ${{ github.repository }} – GitHub Pages</footer>
          </body>
          </html>
          HTML

      # レポートがある時だけ site/report/ に同梱
      - name: Bundle report into site/
        if: steps.check_blobs.outputs.found == 'true'
        run: |
          mkdir -p site
          # playwright-report は直下に生成済み（merge-reports）
          if [ -d "playwright-report" ]; then
            mkdir -p site/report
            cp -a playwright-report/. site/report/
          else
            echo "::warning:: playwright-report directory not found."
          fi

      # --- main のときだけ Pages 公開（かつ blob がある時だけ）
      - name: Setup Pages
        if: ${{ github.ref == 'refs/heads/main' && steps.check_blobs.outputs.found == 'true' }}
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        if: ${{ github.ref == 'refs/heads/main' && steps.check_blobs.outputs.found == 'true' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: site   # ← dev portal + report を同梱

      - name: Deploy to GitHub Pages
        id: deployment
        if: ${{ github.ref == 'refs/heads/main' && steps.check_blobs.outputs.found == 'true' }}
        uses: actions/deploy-pages@v4

      # === 実行サマリー/PRコメント（Pages URL があるときだけ） ===
      - name: Add link to job summary
        if: ${{ always() && steps.deployment.outputs.page_url }}
        run: |
          echo "### Dev Portal / Playwright Report" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "🏠 Portal: **${{ steps.deployment.outputs.page_url }}**" >> "$GITHUB_STEP_SUMMARY"
          echo "🧪 Report: **${{ steps.deployment.outputs.page_url }}report/**" >> "$GITHUB_STEP_SUMMARY"

      - name: Comment on PR with portal & report links
        if: ${{ github.event_name == 'pull_request' && always() && steps.deployment.outputs.page_url }}
        uses: actions/github-script@v7
        with:
          script: |
            const base = `${{ toJson(steps.deployment.outputs.page_url) }}`.replace(/^"|"$/g, '');
            if (!base) return;
            const body = `🏠 **Dev Portal**\n\n${base}\n\n🧪 **Playwright Report**\n\n${base}report/`;
            const { context, github } = require('@actions/github');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });
