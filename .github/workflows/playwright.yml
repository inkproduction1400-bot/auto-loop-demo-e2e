name: E2E (Playwright)

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write

# Pages 競合回避
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    name: Run E2E on ${{ matrix.project }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
      max-parallel: 3

    # ✅ Job 全体に Stripe/BASE_URL を注入（Playwright → webServer にも伝搬）
    env:
      CI: true
      NEXT_PUBLIC_BASE_URL: "http://localhost:3100"
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Install Playwright browsers & deps
        run: npx playwright install --with-deps

      # 🔎 環境変数の健全性チェック（値は出さない）
      - name: Sanity check env (no secret values)
        run: |
          if [ -n "${STRIPE_SECRET_KEY}" ]; then echo "STRIPE_SECRET_KEY: set"; else echo "STRIPE_SECRET_KEY: MISSING"; fi
          if [ -n "${STRIPE_PUBLISHABLE_KEY}" ]; then echo "STRIPE_PUBLISHABLE_KEY: set"; else echo "STRIPE_PUBLISHABLE_KEY: MISSING"; fi
          echo "BASE_URL: ${NEXT_PUBLIC_BASE_URL:-<none>}"

      # config 側で reporter=[blob,junit]（HTMLはここでは生成しない）
      - name: Run tests (${{ matrix.project }})
        run: npx playwright test --project="${{ matrix.project }}" --workers=1

      - name: Upload blob report (per-project)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.project }}
          path: blob-report
          if-no-files-found: error
          retention-days: 7

      - name: Upload JUnit XML (per-project)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.project }}
          path: test-results/junit.xml
          if-no-files-found: warn
          retention-days: 30

  publish:
    name: Publish combined HTML report to GitHub Pages
    needs: [test]
    runs-on: ubuntu-latest
    # テストが失敗しても HTML を公開してデバッグ可能に
    if: ${{ always() && github.ref == 'refs/heads/main' }}
    timeout-minutes: 20

    # ★ GitHub Pages 用 environment（必須）
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps (for merge tool)
        run: npm ci

      - name: Download all blob reports
        uses: actions/download-artifact@v4
        with:
          pattern: blob-report-*
          path: ./blob-reports
          merge-multiple: true

      - name: Merge to single HTML report
        run: npx playwright merge-reports --reporter html ./blob-reports

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: playwright-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
